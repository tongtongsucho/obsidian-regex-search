/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var L=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var _=Object.getOwnPropertyNames;var N=Object.prototype.hasOwnProperty;var E=(S,c)=>L(S,"name",{value:c,configurable:!0});var $=(S,c)=>{for(var e in c)L(S,e,{get:c[e],enumerable:!0})},B=(S,c,e,t)=>{if(c&&typeof c=="object"||typeof c=="function")for(let s of _(c))!N.call(S,s)&&s!==e&&L(S,s,{get:()=>c[s],enumerable:!(t=A(c,s))||t.enumerable});return S};var O=S=>B(L({},"__esModule",{value:!0}),S);var q={};$(q,{default:()=>C});module.exports=O(q);var o=require("obsidian");var x={MAX_REGEX_COMPLEXITY:1e3,MAX_FILE_SIZE:10*1024*1024,BATCH_SIZE:5,SEARCH_BATCH_SIZE:10,DEBOUNCE_DELAY:300,PROGRESS_UPDATE_INTERVAL:100,HIGHLIGHT_DURATION:3e3,MAX_CONTEXT_LINES:3,MAX_RESULTS_PER_FILE:100,MIN_SEARCH_LENGTH:1,MAX_SEARCH_LENGTH:500,TIMEOUT_DURATION:3e4},y=class extends Error{constructor(e,t){super(e);this.pattern=t;this.name="RegexValidationError"}};E(y,"RegexValidationError");var b=class extends Error{constructor(c){super(c),this.name="SearchTimeoutError"}};E(b,"SearchTimeoutError");var T=class{static validateRegex(c,e){if(!c||c.length===0)throw new y("正则表达式不能为空",c);if(c.length>x.MAX_SEARCH_LENGTH)throw new y(`正则表达式过长（最大${x.MAX_SEARCH_LENGTH}字符）`,c);if(this.calculateComplexity(c)>x.MAX_REGEX_COMPLEXITY)throw new y("正则表达式过于复杂，可能导致性能问题",c);try{return new RegExp(c,e)}catch(s){throw new y(`正则表达式语法错误: ${s.message}`,c)}}static calculateComplexity(c){let e=0;return e+=c.length,e+=(c.match(/[*+?{]/g)||[]).length*10,e+=(c.match(/\(/g)||[]).length*5,e+=(c.match(/\[/g)||[]).length*3,e+=(c.match(/\?\=/g)||[]).length*20,e}static sanitizeInput(c){return c.trim().replace(/[\x00-\x1F\x7F]/g,"")}static escapeRegex(c){return c.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};E(T,"RegexUtils");var k=class{constructor(){this.history=[];this.maxSize=20}add(c){if(!c||c.length===0)return;let e=this.history.indexOf(c);e>-1&&this.history.splice(e,1),this.history.unshift(c),this.history.length>this.maxSize&&(this.history=this.history.slice(0,this.maxSize))}get(){return[...this.history]}clear(){this.history=[]}};E(k,"SearchHistory");var R=class{constructor(c=x.TIMEOUT_DURATION){this.timeoutMs=c;this.abortController=new AbortController}get signal(){return this.abortController.signal}start(){return new Promise((c,e)=>{this.timeoutId=window.setTimeout(()=>{this.cancel(),e(new b("搜索超时"))},this.timeoutMs),this.abortController.signal.addEventListener("abort",()=>{this.timeoutId&&clearTimeout(this.timeoutId),e(new Error("搜索已取消"))})})}cancel(){this.timeoutId&&clearTimeout(this.timeoutId),this.abortController.abort()}complete(){this.timeoutId&&clearTimeout(this.timeoutId)}};E(R,"SearchTask");var V={startSearch:{from:["idle"],to:"searching",action:"search"},startReplace:{from:["idle"],to:"replacing",action:"replace"},completeOperation:{from:["searching","replacing"],to:"idle"},cancelOperation:{from:["searching","replacing"],to:"cancelled"},handleError:{from:["searching","replacing"],to:"error"},reset:{from:["cancelled","error"],to:"idle"}},X={defaultPattern:"",caseSensitive:!1,multiline:!1,maxResultsPerFile:50,includeHiddenFiles:!1,fileExtensions:["md","txt","json"],searchHistory:[],enableSearchHistory:!0,confirmReplace:!0,enableProgressIndicator:!0,excludePatterns:[],enableDebugLogging:!1},C=class extends o.Plugin{constructor(){super(...arguments);this.currentSearchTask=null}async onload(){await this.loadSettings(),this.searchHistory=new k,this.settings.enableSearchHistory&&this.settings.searchHistory.forEach(t=>{this.searchHistory.add(t)}),this.addCommand({id:"open-regex-search",name:"打开正则表达式搜索",callback:()=>{new w(this.app,this).open()}}),this.addCommand({id:"regex-search-current-file",name:"在当前文件中搜索",callback:()=>{let t=this.app.workspace.getActiveFile();t?new w(this.app,this,t).open():new o.Notice("没有打开的文件")}}),this.addCommand({id:"quick-regex-search",name:"快速正则表达式搜索",callback:()=>{new M(this.app,this).open()}}),this.addSettingTab(new H(this.app,this));let e=this.addStatusBarItem();e.setText("Regex Search"),e.addClass("regex-search-statusbar")}onunload(){this.currentSearchTask&&this.currentSearchTask.cancel(),this.settings.enableSearchHistory&&(this.settings.searchHistory=this.searchHistory.get(),this.saveSettings())}async loadSettings(){this.settings=Object.assign({},X,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}filterFiles(e){return e.filter(t=>{if(!this.settings.fileExtensions.includes(t.extension)||!this.settings.includeHiddenFiles&&t.name.startsWith("."))return!1;if(this.settings.excludePatterns.length>0){let s=t.path;return!this.settings.excludePatterns.some(n=>{try{return new RegExp(n,"i").test(s)}catch(i){return s.includes(n)}})}return!0})}async checkFileSize(e){try{let t=await this.app.vault.adapter.stat(e.path);return t&&t.size<=x.MAX_FILE_SIZE}catch(t){return!0}}async searchInFile(e,t,s,n){let i=Date.now();try{if(!await this.checkFileSize(e))return{file:e,matches:[],totalMatches:0,searchTime:Date.now()-i,error:"文件过大，跳过搜索"};if(n!=null&&n.aborted)throw new Error("搜索已取消");let l=await this.app.vault.read(e),g=T.validateRegex(t,s),a=[];if(n!=null&&n.aborted)throw new Error("搜索已取消");return await this.performSearch(l,g,e,a,n),{file:e,matches:a,totalMatches:a.length,searchTime:Date.now()-i}}catch(r){return{file:e,matches:[],totalMatches:0,searchTime:Date.now()-i,error:r.message}}}async performSearch(e,t,s,n,i){let r=e.split(`
`),l=Math.min(this.settings.maxResultsPerFile,x.MAX_RESULTS_PER_FILE);this.needsFullTextSearch(t)?await this.performFullTextSearch(e,t,s,n,l,i):await this.performLineByLineSearch(r,t,s,n,l,i)}needsFullTextSearch(e){let t=e.source;return e.flags.includes("m")||/\\[1-9]/.test(t)||t.includes("\\n")||t.includes("\\r")||t.includes("\\s")&&(t.includes(".*")||t.includes(".+"))||t.includes(".*")||t.includes(".+")}async performFullTextSearch(e,t,s,n,i,r){let l=e.split(`
`),g;for(t.lastIndex=0;(g=t.exec(e))!==null&&n.length<i;){if(r!=null&&r.aborted)throw new Error("搜索已取消");let a=e.substring(0,g.index),h=a.split(`
`).length,f=a.lastIndexOf(`
`)+1,m=g.index-f+1,u=this.getContext(l,h-1),p=l[h-1]||"";if(n.push({file:s,line:h,column:m,match:g[0],context:u,lineText:p,matchId:`${s.path}-${h}-${m}`}),!t.flags.includes("g"))break;n.length%10===0&&await new Promise(d=>setTimeout(d,0))}}async performLineByLineSearch(e,t,s,n,i,r){for(let l=0;l<e.length&&n.length<i;l++){if(r!=null&&r.aborted)throw new Error("搜索已取消");let g=e[l],a;for(t.lastIndex=0;(a=t.exec(g))!==null&&n.length<i;){let h=this.getContext(e,l);if(n.push({file:s,line:l+1,column:a.index+1,match:a[0],context:h,lineText:g,matchId:`${s.path}-${l+1}-${a.index+1}`}),!t.flags.includes("g"))break}l%100===0&&await new Promise(h=>setTimeout(h,0))}}getContext(e,t){let s=[],n=Math.floor(x.MAX_CONTEXT_LINES/2);for(let i=Math.max(0,t-n);i<=Math.min(e.length-1,t+n);i++)s.push(e[i]);return s.join(`
`)}async searchInVault(e,t,s){this.currentSearchTask&&this.currentSearchTask.cancel(),this.currentSearchTask=new R;let n=this.currentSearchTask.signal;try{let i=this.app.vault.getFiles(),r=this.filterFiles(i),l=[];if(r.length===0)return l;let g=this.currentSearchTask.start(),a=this.performVaultSearch(r,e,t,l,s,n);return await Promise.race([a,g]),this.currentSearchTask.complete(),this.settings.enableSearchHistory&&this.searchHistory.add(e),l}catch(i){throw i instanceof b&&new o.Notice("搜索超时，请尝试更具体的搜索条件"),i}finally{this.currentSearchTask=null}}async performVaultSearch(e,t,s,n,i,r){var g;let l=x.SEARCH_BATCH_SIZE;for(let a=0;a<e.length;a+=l){if(r!=null&&r.aborted)throw new Error("搜索已取消");let h=e.slice(a,a+l),f=h.map(u=>this.searchInFile(u,t,s,r)),m=await Promise.all(f);for(let u of m)u.matches.length>0&&n.push(u);i&&i({current:a+h.length,total:e.length,currentFile:(g=h[h.length-1])==null?void 0:g.name,isComplete:a+h.length>=e.length}),await new Promise(u=>setTimeout(u,0))}}buildRegexFlags(){let e="";return this.settings.caseSensitive||(e+="i"),this.settings.multiline&&(e+="m"),e+="g",e}async replaceInFile(e,t,s,n,i){try{if(i!=null&&i.aborted)throw new Error("替换已取消");let r=await this.app.vault.read(e),l=T.validateRegex(t,n),g=r.match(l),a=g?g.length:0;if(a===0)return{file:e,replacedCount:0,originalContent:r,newContent:r};let h=r.replace(l,s);return h!==r&&await this.app.vault.modify(e,h),{file:e,replacedCount:a,originalContent:r,newContent:h}}catch(r){return{file:e,replacedCount:0,originalContent:"",newContent:"",error:r.message}}}async replaceInVault(e,t,s,n){let i=Date.now();this.currentSearchTask&&this.currentSearchTask.cancel(),this.currentSearchTask=new R;let r=this.currentSearchTask.signal;try{let l=this.app.vault.getFiles(),g=this.filterFiles(l),a=[],h=[],f=0,m=0;if(g.length===0)return{totalReplacements:0,filesModified:0,results:[],errors:[],processingTime:Date.now()-i};let u=this.currentSearchTask.start(),p=this.performVaultReplace(g,e,t,s,a,h,n,r);await Promise.race([p,u]),this.currentSearchTask.complete();for(let d of a)d.replacedCount>0&&(f+=d.replacedCount,m++);return{totalReplacements:f,filesModified:m,results:a,errors:h,processingTime:Date.now()-i}}catch(l){throw l instanceof b&&new o.Notice("替换超时，请尝试更具体的搜索条件"),l}finally{this.currentSearchTask=null}}async performVaultReplace(e,t,s,n,i,r,l,g){var h;let a=x.BATCH_SIZE;for(let f=0;f<e.length;f+=a){if(g!=null&&g.aborted)throw new Error("替换已取消");let m=e.slice(f,f+a);for(let u of m)try{let p=await this.replaceInFile(u,t,s,n,g);p.error?r.push(`${u.path}: ${p.error}`):i.push(p)}catch(p){r.push(`${u.path}: ${p.message}`)}l&&l({current:f+m.length,total:e.length,currentFile:(h=m[m.length-1])==null?void 0:h.name,isComplete:f+m.length>=e.length}),await new Promise(u=>setTimeout(u,0))}}cancelCurrentSearch(){this.currentSearchTask&&(this.currentSearchTask.cancel(),this.currentSearchTask=null)}getSearchHistory(){return this.searchHistory.get()}clearSearchHistory(){this.searchHistory.clear(),this.settings.searchHistory=[],this.saveSettings()}};E(C,"RegexSearchPlugin");var M=class extends o.Modal{constructor(e,t){super(e);this.currentResults=[];this.plugin=t}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("quick-search-modal");let t=e.createDiv("quick-search-container");t.createEl("h3",{text:"🔍 快速搜索"}),this.searchInput=t.createEl("input",{type:"text",placeholder:"输入搜索内容...",cls:"quick-search-input"}),this.resultsContainer=e.createDiv("quick-search-results");let s=(0,o.debounce)(this.performQuickSearch.bind(this),x.DEBOUNCE_DELAY);this.searchInput.addEventListener("input",s),this.searchInput.addEventListener("keydown",n=>{n.key==="Escape"?this.close():n.key==="Enter"&&this.openFullSearch()}),this.searchInput.focus()}async performQuickSearch(){let e=this.searchInput.value.trim();if(e.length<x.MIN_SEARCH_LENGTH){this.resultsContainer.empty();return}try{let t=T.escapeRegex(e),s=this.plugin.buildRegexFlags(),n=this.plugin.app.vault.getFiles().slice(0,10),i=[];for(let r of n){let l=await this.plugin.searchInFile(r,t,s);l.matches.length>0&&i.push(l)}this.displayQuickResults(i)}catch(t){}}displayQuickResults(e){if(this.resultsContainer.empty(),this.currentResults=e,e.length===0){this.resultsContainer.createEl("div",{text:"未找到匹配项",cls:"quick-search-no-results"});return}e.forEach(t=>{let s=this.resultsContainer.createDiv("quick-search-file");s.createEl("div",{text:t.file.name,cls:"quick-search-filename"}),t.matches.slice(0,3).forEach(n=>{let i=s.createDiv("quick-search-match");i.createEl("span",{text:`第${n.line}行: `,cls:"quick-search-line"}),i.createEl("span",{text:n.lineText,cls:"quick-search-text"}),i.addEventListener("click",()=>{this.jumpToMatch(n)})})})}async jumpToMatch(e){this.close(),await this.app.workspace.getLeaf().openFile(e.file),setTimeout(()=>{let s=this.app.workspace.getActiveViewOfType(o.MarkdownView);if(s&&s.editor){let n=s.editor,i=e.line-1,r=e.column-1;n.setCursor(i,r),n.scrollIntoView({from:{line:i,ch:0},to:{line:i,ch:n.getLine(i).length}},!0)}},100)}openFullSearch(){this.close(),new w(this.app,this.plugin).open()}onClose(){let{contentEl:e}=this;e.empty()}};E(M,"QuickSearchModal");var w=class extends o.Modal{constructor(e,t,s){super(e);this.searchResults=[];this.currentState="idle";this.plugin=t,this.currentFile=s||null}canTransitionTo(e){let t=Object.values(V).find(s=>s.to===e);return t?t.from.includes(this.currentState):!1}transitionToState(e,t){if(this.canTransitionTo(e)){let s=this.currentState;return this.currentState=e,this.onStateChanged(s,e,t),!0}return!1}onStateChanged(e,t,s){switch(this.logStateTransition(e,t,s),this.updateButtonStates(),t){case"idle":this.hideProgress();break;case"searching":this.showProgress("搜索中...");break;case"replacing":this.showProgress("替换中...");break;case"cancelled":this.hideProgress(),new o.Notice("操作已取消"),setTimeout(()=>this.transitionToState("idle"),1e3);break;case"error":this.hideProgress(),setTimeout(()=>this.transitionToState("idle"),2e3);break}}logStateTransition(e,t,s){this.plugin.settings.enableDebugLogging}getStateDisplayName(e){return{["idle"]:"空闲",["searching"]:"搜索中",["replacing"]:"替换中",["cancelled"]:"已取消",["error"]:"错误"}[e]||e}getCurrentStateInfo(){return{state:this.currentState,displayName:this.getStateDisplayName(this.currentState),canSearch:this.isIdle(),canReplace:this.isIdle()}}isIdle(){return this.currentState==="idle"}isSearching(){return this.currentState==="searching"}isReplacing(){return this.currentState==="replacing"}isOperating(){return this.isSearching()||this.isReplacing()}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("regex-search-modal"),this.modalEl.style.width="100%",this.modalEl.style.maxWidth="480px",this.modalEl.style.overflowX="hidden",this.modalEl.style.height="auto",this.modalEl.style.maxHeight="85vh",this.contentEl.style.boxSizing="border-box",this.contentEl.style.overflowWrap="anywhere",this.contentEl.style.wordBreak="break-all",this.contentEl.style.padding="0",this.contentEl.style.margin="0";let t=e.createEl("h2",{text:this.currentFile?`🔍 在 ${this.currentFile.name} 中搜索`:"🎯 正则表达式搜索",cls:"regex-search-title"}),s=e.createDiv("regex-search-container"),n=s.createDiv("regex-pattern-container");if(n.createEl("label",{text:"⚡ 正则表达式："}),this.patternInput=n.createEl("input",{type:"text",placeholder:"输入正则表达式...",value:this.plugin.settings.defaultPattern,cls:"regex-pattern-input"}),this.patternInput.focus(),this.plugin.settings.enableSearchHistory){let d=s.createDiv("regex-history-container");this.createHistoryDropdown(d)}let i=s.createDiv("regex-replace-container");i.createEl("label",{text:"✨ 替换为："}),this.replaceInput=i.createEl("input",{type:"text",placeholder:"输入替换内容...",value:"",cls:"regex-replace-input"});let r=s.createDiv("regex-options-container"),l=this.createToggle(r,"🔤 区分大小写",this.plugin.settings.caseSensitive),g=this.createToggle(r,"📝 多行模式",this.plugin.settings.multiline);this.progressEl=s.createDiv("regex-progress"),this.progressEl.style.display="none";let a=s.createDiv("regex-button-container"),h=a.createEl("button",{text:"🔍 搜索",cls:"regex-search-button"}),f=a.createEl("button",{text:"🔄 替换",cls:"regex-replace-button"}),m=a.createEl("button",{text:"❌ 取消",cls:"regex-cancel-button"}),u=a.createEl("button",{text:"🧹 清空结果",cls:"regex-clear-button"}),p=e.createDiv("regex-results-container");this.bindEvents(h,f,m,u,p,l,g)}createHistoryDropdown(e){let t=e.createEl("button",{text:"📚 历史",cls:"regex-history-button"});t.addEventListener("click",()=>{this.showHistoryMenu(t)})}showHistoryMenu(e){let t=this.plugin.getSearchHistory();if(t.length===0){new o.Notice("没有搜索历史");return}let s=new o.Menu;t.forEach(i=>{s.addItem(r=>{r.setTitle(i),r.onClick(()=>{this.patternInput.value=i,this.patternInput.focus()})})}),s.addSeparator(),s.addItem(i=>{i.setTitle("清空历史"),i.onClick(()=>{this.plugin.clearSearchHistory(),new o.Notice("搜索历史已清空")})});let n=e.getBoundingClientRect();s.showAtPosition({x:n.left,y:n.bottom})}createToggle(e,t,s){let n=e.createDiv("regex-toggle-container"),i=n.createEl("input",{type:"checkbox"});return i.checked=s,n.createEl("label",{text:t}),i}bindEvents(e,t,s,n,i,r,l){let g=E(async()=>{if(!this.isIdle())return;let u=T.sanitizeInput(this.patternInput.value);if(!u){new o.Notice("请输入正则表达式");return}try{this.transitionToState("searching");let p="";r.checked||(p+="i"),l.checked&&(p+="m"),p+="g",T.validateRegex(u,p),i.empty();let d;if(this.currentFile){let v=await this.plugin.searchInFile(this.currentFile,u,p);d=v.matches.length>0?[v]:[]}else d=await this.plugin.searchInVault(u,p,v=>{this.updateProgress(`搜索中... (${v.current}/${v.total})`)});this.displayResults(d,i),this.transitionToState("idle")}catch(p){p instanceof y?new o.Notice(p.message):new o.Notice("搜索出错："+p.message),this.transitionToState("error")}},"performSearch"),a=E(async()=>{if(!this.isIdle())return;let u=T.sanitizeInput(this.patternInput.value),p=this.replaceInput.value;if(!u){new o.Notice("请输入正则表达式");return}if(!(this.plugin.settings.confirmReplace&&!this.currentFile&&!await this.confirmReplace(u,p)))try{this.transitionToState("replacing");let d="";r.checked||(d+="i"),l.checked&&(d+="m"),d+="g",T.validateRegex(u,d),i.empty();let v=0,F=0;if(this.currentFile){let I=await this.plugin.replaceInFile(this.currentFile,u,p,d);v=I.replacedCount,F=I.replacedCount>0?1:0}else{let I=await this.plugin.replaceInVault(u,p,d,D=>{this.updateProgress(`替换中... (${D.current}/${D.total})`)});v=I.totalReplacements,F=I.filesModified}this.displayReplaceResults(v,F,i),this.transitionToState("idle")}catch(d){d instanceof y?new o.Notice(d.message):new o.Notice("替换出错："+d.message),this.transitionToState("error")}},"performReplace"),h=E(()=>{this.plugin.cancelCurrentSearch(),this.transitionToState("cancelled")},"cancelSearch"),f=E(()=>{i.empty(),i.classList.remove("has-content"),this.containerEl.classList.remove("has-results"),this.searchResults=[]},"clearResults");e.addEventListener("click",g),t.addEventListener("click",a),s.addEventListener("click",h),n.addEventListener("click",f);let m=E(u=>{u.key==="Enter"?u.ctrlKey||u.metaKey?(u.preventDefault(),a()):(u.preventDefault(),g()):u.key==="Escape"&&(this.isOperating()?h():this.close())},"handleKeydown");this.patternInput.addEventListener("keydown",m),this.replaceInput.addEventListener("keydown",m)}updateButtonStates(){let e=this.containerEl.querySelector(".regex-search-button"),t=this.containerEl.querySelector(".regex-replace-button"),s=this.containerEl.querySelector(".regex-cancel-button"),n=this.isOperating();e&&(e.disabled=n),t&&(t.disabled=n),s&&(s.style.display=n?"block":"none")}showProgress(e){this.progressEl.textContent=e,this.progressEl.style.display="block"}updateProgress(e){this.progressEl.textContent=e}hideProgress(){this.progressEl.style.display="none"}async confirmReplace(e,t){return new Promise(s=>{new P(this.app,{title:"确认替换",message:`确定要在整个库中执行替换操作吗？

模式：${e}
替换为：${t}`,confirmText:"确定",cancelText:"取消"},s).open()})}displayReplaceResults(e,t,s){if(s.empty(),s.classList.add("has-content"),this.containerEl.classList.add("has-results"),e>0){let n=s.createEl("div",{cls:"regex-replace-success"});n.createEl("div",{text:"✅ 替换完成！"}),n.createEl("div",{text:`共替换 ${e} 处，涉及 ${t} 个文件`})}else s.createEl("div",{text:"未找到匹配的内容",cls:"regex-no-results"})}displayResults(e,t){if(t.empty(),this.searchResults=e,e.length===0){t.createEl("div",{text:"未找到匹配项",cls:"regex-no-results"}),t.classList.add("has-content"),this.containerEl.classList.add("has-results");return}t.classList.add("has-content"),this.containerEl.classList.add("has-results");let s=e.reduce((i,r)=>i+r.totalMatches,0);t.createEl("div",{cls:"regex-stats"}).createEl("span",{text:`找到 ${s} 个匹配项，分布在 ${e.length} 个文件中`}),e.forEach(i=>{if(i.error){let a=t.createEl("div",{cls:"regex-error"});a.createEl("strong",{text:i.file.name}),a.createEl("span",{text:` - 错误：${i.error}`});return}let r=t.createDiv("regex-file-result"),l=r.createEl("div",{cls:"regex-file-title"});l.createEl("strong",{text:i.file.name}),l.createEl("span",{text:` (${i.totalMatches} 个匹配项)`});let g=r.createDiv("regex-matches-container");i.matches.forEach(a=>{let h=g.createDiv("regex-match");h.setAttribute("data-match-id",a.matchId),h.createEl("div",{cls:"regex-match-location"}).createEl("span",{text:`第 ${a.line} 行，第 ${a.column} 列`});let m=h.createEl("div",{cls:"regex-match-content"});this.renderMatchContent(m,a),h.addEventListener("click",()=>{this.jumpToMatch(a)})})})}renderMatchContent(e,t){t.context.split(`
`).forEach((n,i)=>{let r=e.createEl("div",{cls:"regex-context-line"});if(n===t.lineText){r.addClass("regex-match-line");let g=n.substring(0,t.column-1),a=t.match,h=n.substring(t.column-1+a.length);r.createEl("span",{text:g}),r.createEl("span",{text:a,cls:"regex-highlight"}),r.createEl("span",{text:h})}else r.createEl("span",{text:n})})}async jumpToMatch(e){try{let t=this.containerEl.querySelector(`[data-match-id="${e.matchId}"]`);t&&t.addClass("loading"),this.close(),await this.app.workspace.getLeaf().openFile(e.file),setTimeout(()=>{let n=this.app.workspace.getActiveViewOfType(o.MarkdownView);n&&n.editor&&this.highlightMatch(n.editor,e)},100)}catch(t){new o.Notice("跳转失败："+t.message)}}highlightMatch(e,t){try{let s=t.line-1,n=t.column-1,i=t.match.length;e.setCursor(s,n),e.scrollIntoView({from:{line:s,ch:0},to:{line:s,ch:e.getLine(s).length}},!0),e.setSelection({line:s,ch:n},{line:s,ch:n+i}),setTimeout(()=>{try{e.setCursor(s,n)}catch(r){}},x.HIGHLIGHT_DURATION)}catch(s){}}onClose(){this.isOperating()&&this.plugin.cancelCurrentSearch();let{contentEl:e}=this;e.empty()}};E(w,"RegexSearchModal");var P=class extends o.Modal{constructor(e,t,s){super(e);this.options=t,this.callback=s}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("confirm-modal"),e.createEl("h3",{text:this.options.title}),e.createEl("div",{cls:"confirm-message"}).createEl("p",{text:this.options.message});let s=e.createDiv("confirm-buttons"),n=s.createEl("button",{text:this.options.confirmText,cls:"confirm-button-confirm"}),i=s.createEl("button",{text:this.options.cancelText,cls:"confirm-button-cancel"});n.addEventListener("click",()=>{this.callback(!0),this.close()}),i.addEventListener("click",()=>{this.callback(!1),this.close()}),this.scope.register([],"Enter",()=>{this.callback(!0),this.close()}),this.scope.register([],"Escape",()=>{this.callback(!1),this.close()}),i.focus()}onClose(){let{contentEl:e}=this;e.empty()}};E(P,"ConfirmModal");var H=class extends o.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"🎯 正则表达式搜索设置"}),this.createBasicSettings(e),this.createAdvancedSettings(e),this.createPerformanceSettings(e),this.createUserExperienceSettings(e)}createBasicSettings(e){let t=e.createEl("h3",{text:"⚙️ 基本设置"});new o.Setting(e).setName("默认搜索模式").setDesc("打开搜索时的默认正则表达式模式").addText(s=>s.setPlaceholder("输入默认正则表达式...").setValue(this.plugin.settings.defaultPattern).onChange(async n=>{this.plugin.settings.defaultPattern=T.sanitizeInput(n),await this.plugin.saveSettings()})),new o.Setting(e).setName("区分大小写").setDesc("默认启用区分大小写搜索").addToggle(s=>s.setValue(this.plugin.settings.caseSensitive).onChange(async n=>{this.plugin.settings.caseSensitive=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("多行模式").setDesc("默认启用多行模式（^ 和 $ 匹配行首行尾）").addToggle(s=>s.setValue(this.plugin.settings.multiline).onChange(async n=>{this.plugin.settings.multiline=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("文件扩展名").setDesc("要搜索的文件扩展名（用逗号分隔）").addText(s=>s.setPlaceholder("md,txt,json,js,ts").setValue(this.plugin.settings.fileExtensions.join(",")).onChange(async n=>{let i=n.split(",").map(r=>r.trim()).filter(r=>r.length>0);this.plugin.settings.fileExtensions=i,await this.plugin.saveSettings()}))}createAdvancedSettings(e){let t=e.createEl("h3",{text:"🔧 高级设置"});new o.Setting(e).setName("包含隐藏文件").setDesc("在搜索中包含隐藏文件（以 . 开头的文件）").addToggle(s=>s.setValue(this.plugin.settings.includeHiddenFiles).onChange(async n=>{this.plugin.settings.includeHiddenFiles=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("排除模式").setDesc("要排除的文件路径模式（用逗号分隔，支持正则表达式）").addText(s=>s.setPlaceholder("node_modules,\\.git,temp").setValue(this.plugin.settings.excludePatterns.join(",")).onChange(async n=>{let i=n.split(",").map(r=>r.trim()).filter(r=>r.length>0);this.plugin.settings.excludePatterns=i,await this.plugin.saveSettings()})),new o.Setting(e).setName("确认替换").setDesc("在执行全库替换操作前显示确认对话框").addToggle(s=>s.setValue(this.plugin.settings.confirmReplace).onChange(async n=>{this.plugin.settings.confirmReplace=n,await this.plugin.saveSettings()}))}createPerformanceSettings(e){let t=e.createEl("h3",{text:"⚡ 性能设置"});new o.Setting(e).setName("每个文件最大结果数").setDesc("限制每个文件显示的最大搜索结果数量").addText(s=>s.setPlaceholder("50").setValue(this.plugin.settings.maxResultsPerFile.toString()).onChange(async n=>{let i=parseInt(n);!isNaN(i)&&i>0&&i<=x.MAX_RESULTS_PER_FILE&&(this.plugin.settings.maxResultsPerFile=i,await this.plugin.saveSettings())}))}createUserExperienceSettings(e){let t=e.createEl("h3",{text:"🎨 用户体验设置"});new o.Setting(e).setName("启用搜索历史").setDesc("保存和显示搜索历史记录").addToggle(s=>s.setValue(this.plugin.settings.enableSearchHistory).onChange(async n=>{this.plugin.settings.enableSearchHistory=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("启用进度指示器").setDesc("在搜索和替换过程中显示进度指示器").addToggle(s=>s.setValue(this.plugin.settings.enableProgressIndicator).onChange(async n=>{this.plugin.settings.enableProgressIndicator=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("调试模式").setDesc("启用后会在开发者控制台显示状态转换日志").addToggle(s=>s.setValue(this.plugin.settings.enableDebugLogging).onChange(async n=>{this.plugin.settings.enableDebugLogging=n,await this.plugin.saveSettings()})),new o.Setting(e).setName("清空搜索历史").setDesc("删除所有保存的搜索历史记录").addButton(s=>s.setButtonText("🗑️ 清空历史").setWarning().onClick(async()=>{this.plugin.clearSearchHistory(),new o.Notice("搜索历史已清空")}))}};E(H,"RegexSearchSettingTab");
