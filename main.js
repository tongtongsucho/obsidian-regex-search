/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var H=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var X=Object.getOwnPropertyNames;var q=Object.prototype.hasOwnProperty;var E=(b,h)=>H(b,"name",{value:h,configurable:!0});var U=(b,h)=>{for(var e in h)H(b,e,{get:h[e],enumerable:!0})},G=(b,h,e,t)=>{if(h&&typeof h=="object"||typeof h=="function")for(let r of X(h))!q.call(b,r)&&r!==e&&H(b,r,{get:()=>h[r],enumerable:!(t=V(h,r))||t.enumerable});return b};var j=b=>G(H({},"__esModule",{value:!0}),b);var W={};U(W,{default:()=>D});module.exports=j(W);var c=require("obsidian");var v={MAX_REGEX_COMPLEXITY:1e3,MAX_FILE_SIZE:10*1024*1024,BATCH_SIZE:8,SEARCH_BATCH_SIZE:20,DEBOUNCE_DELAY:150,PROGRESS_UPDATE_INTERVAL:50,HIGHLIGHT_DURATION:3e3,MAX_CONTEXT_LINES:2,MAX_RESULTS_PER_FILE:50,MIN_SEARCH_LENGTH:1,MAX_SEARCH_LENGTH:500,TIMEOUT_DURATION:15e3,MAX_SEARCH_RESULTS:3e3},I=class extends Error{constructor(e,t){super(e);this.pattern=t;this.name="RegexValidationError"}};E(I,"RegexValidationError");var L=class extends Error{constructor(h){super(h),this.name="SearchTimeoutError"}};E(L,"SearchTimeoutError");var w=class{static validateRegex(h,e){if(!h||h.length===0)throw new I("正则表达式不能为空",h);if(h.length>v.MAX_SEARCH_LENGTH)throw new I(`正则表达式过长（最大${v.MAX_SEARCH_LENGTH}字符）`,h);if(this.calculateComplexity(h)>v.MAX_REGEX_COMPLEXITY)throw new I("正则表达式过于复杂，可能导致性能问题",h);try{return new RegExp(h,e)}catch(r){throw new I(`正则表达式语法错误: ${r.message}`,h)}}static calculateComplexity(h){let e=0;return e+=h.length,e+=(h.match(/[*+?{]/g)||[]).length*10,e+=(h.match(/\(/g)||[]).length*5,e+=(h.match(/\[/g)||[]).length*3,e+=(h.match(/\?\=/g)||[]).length*20,e}static sanitizeInput(h){return h.trim().replace(/[\x00-\x1F\x7F]/g,"")}static escapeRegex(h){return h.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}};E(w,"RegexUtils");var F=class{constructor(){this.history=[];this.maxSize=20}add(h){if(!h||h.length===0)return;let e=this.history.indexOf(h);e>-1&&this.history.splice(e,1),this.history.unshift(h),this.history.length>this.maxSize&&(this.history=this.history.slice(0,this.maxSize))}get(){return[...this.history]}clear(){this.history=[]}};E(F,"SearchHistory");var A=class{constructor(h=v.TIMEOUT_DURATION){this.timeoutMs=h;this.abortController=new AbortController}get signal(){return this.abortController.signal}start(){return new Promise((h,e)=>{this.timeoutId=window.setTimeout(()=>{this.cancel(),e(new L("搜索超时"))},this.timeoutMs),this.abortController.signal.addEventListener("abort",()=>{this.timeoutId&&clearTimeout(this.timeoutId),e(new Error("搜索已取消"))})})}cancel(){this.timeoutId&&clearTimeout(this.timeoutId),this.abortController.abort()}complete(){this.timeoutId&&clearTimeout(this.timeoutId)}};E(A,"SearchTask");var Z={startSearch:{from:["idle"],to:"searching",action:"search"},startReplace:{from:["idle"],to:"replacing",action:"replace"},completeOperation:{from:["searching","replacing"],to:"idle"},cancelOperation:{from:["searching","replacing"],to:"cancelled"},handleError:{from:["searching","replacing"],to:"error"},reset:{from:["cancelled","error"],to:"idle"}},Y={defaultPattern:"",caseSensitive:!1,multiline:!1,maxResultsPerFile:50,includeHiddenFiles:!1,fileExtensions:["md"],searchHistory:[],enableSearchHistory:!0,confirmReplace:!0,enableProgressIndicator:!0,excludePatterns:[],enableDebugLogging:!1,regexLibrary:[],enableRegexLibrary:!0},$=[{id:"email",name:"电子邮箱",pattern:"[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}",description:"匹配标准格式的电子邮箱地址",category:"联系信息",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"phone-cn",name:"中国手机号",pattern:"1[3-9]\\d{9}",description:"匹配中国大陆11位手机号码",category:"联系信息",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"phone-fixed-cn",name:"中国固定电话",pattern:"0\\d{2,3}-?\\d{7,8}",description:"匹配中国固定电话号码",category:"联系信息",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"url",name:"网址链接",pattern:"https?://[^\\s\\]\\)]+",description:"匹配HTTP或HTTPS网址",category:"网络",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"ip-address",name:"IP地址",pattern:"(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)",description:"匹配IPv4地址",category:"网络",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"domain",name:"域名",pattern:"[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.[a-zA-Z]{2,}",description:"匹配域名",category:"网络",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"date-iso",name:"ISO日期",pattern:"\\d{4}-\\d{2}-\\d{2}",description:"匹配YYYY-MM-DD格式的日期",category:"日期时间",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"date-cn",name:"中文日期",pattern:"\\d{4}年\\d{1,2}月\\d{1,2}日",description:"匹配中文格式日期",category:"日期时间",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"time-24h",name:"24小时时间",pattern:"([01]?\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?",description:"匹配24小时制时间格式",category:"日期时间",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"file-image",name:"图片文件",pattern:"[^\\s]+\\.(jpg|jpeg|png|gif|bmp|webp|svg)(?:\\?[^\\s]*)?",description:"匹配常见图片文件扩展名",category:"文件",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"file-document",name:"文档文件",pattern:"[^\\s]+\\.(pdf|doc|docx|xls|xlsx|ppt|pptx|txt|rtf)(?:\\?[^\\s]*)?",description:"匹配常见文档文件扩展名",category:"文件",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"file-media",name:"媒体文件",pattern:"[^\\s]+\\.(mp4|avi|mkv|mov|wmv|flv|mp3|wav|flac|aac|ogg)(?:\\?[^\\s]*)?",description:"匹配常见音视频文件扩展名",category:"文件",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"file-archive",name:"压缩文件",pattern:"[^\\s]+\\.(zip|rar|7z|tar|gz|bz2|xz)(?:\\?[^\\s]*)?",description:"匹配常见压缩文件扩展名",category:"文件",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"markdown-link",name:"Markdown链接",pattern:"\\[([^\\]]+)\\]\\(([^\\)]+)\\)",description:"匹配Markdown格式的链接 [文本](链接)",category:"Markdown",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"markdown-image",name:"Markdown图片",pattern:"!\\[([^\\]]*)\\]\\(([^\\)]+)\\)",description:"匹配Markdown格式的图片 ![alt](url)",category:"Markdown",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"markdown-heading",name:"Markdown标题",pattern:"^#{1,6}\\s+.+$",description:"匹配Markdown标题（# ## ### 等）",category:"Markdown",flags:"gm",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"markdown-code-block",name:"Markdown代码块",pattern:"```[\\s\\S]*?```",description:"匹配Markdown代码块",category:"Markdown",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"number-decimal",name:"小数",pattern:"-?\\d+\\.\\d+",description:"匹配小数（包括负数）",category:"数字",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"number-integer",name:"整数",pattern:"-?\\d+",description:"匹配整数（包括负数）",category:"数字",flags:"g",createdAt:Date.now(),updatedAt:Date.now(),usage:0},{id:"hex-color",name:"十六进制颜色",pattern:"#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})",description:"匹配十六进制颜色代码",category:"代码",flags:"gi",createdAt:Date.now(),updatedAt:Date.now(),usage:0}],D=class extends c.Plugin{constructor(){super(...arguments);this.currentSearchTask=null}async onload(){await this.loadSettings(),this.searchHistory=new F,this.initializeRegexLibrary(),this.settings.enableSearchHistory&&this.settings.searchHistory.forEach(t=>{this.searchHistory.add(t)}),this.addCommand({id:"open-regex-search",name:"打开正则表达式搜索",callback:()=>{new C(this.app,this).open()}}),this.addCommand({id:"regex-search-current-file",name:"在当前文件中搜索",callback:()=>{let t=this.app.workspace.getActiveFile();t?new C(this.app,this,t).open():new c.Notice("没有打开的文件")}}),this.addCommand({id:"quick-regex-search",name:"快速正则表达式搜索",callback:()=>{new _(this.app,this).open()}}),this.addCommand({id:"manage-regex-library",name:"管理正则表达式库",callback:()=>{new M(this.app,this).open()}}),this.addCommand({id:"reset-builtin-regex-library",name:"重置内置正则表达式库",callback:()=>{this.resetBuiltInRegexLibrary()}}),this.addSettingTab(new N(this.app,this));let e=this.addStatusBarItem();e.setText("Regex Search"),e.addClass("regex-search-statusbar")}onunload(){this.currentSearchTask&&this.currentSearchTask.cancel(),this.settings.enableSearchHistory&&(this.settings.searchHistory=this.searchHistory.get(),this.saveSettings())}async loadSettings(){this.settings=Object.assign({},Y,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}initializeRegexLibrary(){let e=new Set(this.settings.regexLibrary.map(r=>r.id)),t=$.filter(r=>!e.has(r.id));(t.length>0||this.settings.regexLibrary.length===0)&&(this.settings.regexLibrary.push(...t),this.saveSettings(),t.length>0&&new c.Notice(`已添加 ${t.length} 个新的内置正则表达式`))}resetBuiltInRegexLibrary(){new k(this.app,{title:"重置内置正则表达式库",message:"这将会重新添加所有最新的内置正则表达式，不会影响你自定义的内容。确定继续吗？",confirmText:"确定",cancelText:"取消"},e=>{if(e){let t=new Set($.map(r=>r.id));this.settings.regexLibrary=this.settings.regexLibrary.filter(r=>!t.has(r.id)),this.settings.regexLibrary.push(...$),this.saveSettings(),new c.Notice("内置正则表达式库已重置！")}}).open()}addToRegexLibrary(e,t,r,s="自定义",a="g"){try{w.validateRegex(t,a);let i={id:Date.now().toString()+Math.random().toString(36).substr(2,9),name:e.trim(),pattern:t.trim(),description:r.trim(),category:s.trim(),flags:a,createdAt:Date.now(),updatedAt:Date.now(),usage:0};return this.settings.regexLibrary.push(i),this.saveSettings(),!0}catch(i){return new c.Notice("正则表达式无效："+i.message),!1}}updateRegexLibraryItem(e,t){let r=this.settings.regexLibrary.findIndex(s=>s.id===e);if(r===-1)return!1;if(t.pattern||t.flags)try{let s=t.pattern||this.settings.regexLibrary[r].pattern,a=t.flags||this.settings.regexLibrary[r].flags;w.validateRegex(s,a)}catch(s){return new c.Notice("正则表达式无效："+s.message),!1}return this.settings.regexLibrary[r]={...this.settings.regexLibrary[r],...t,updatedAt:Date.now()},this.saveSettings(),!0}removeFromRegexLibrary(e){let t=this.settings.regexLibrary.findIndex(r=>r.id===e);return t===-1?!1:(this.settings.regexLibrary.splice(t,1),this.saveSettings(),!0)}getRegexLibraryItem(e){return this.settings.regexLibrary.find(t=>t.id===e)||null}incrementRegexUsage(e){let t=this.getRegexLibraryItem(e);t&&(t.usage++,t.updatedAt=Date.now(),this.saveSettings())}getRegexLibraryByCategory(){let e={};return this.settings.regexLibrary.forEach(t=>{e[t.category]||(e[t.category]=[]),e[t.category].push(t)}),Object.keys(e).forEach(t=>{e[t].sort((r,s)=>s.usage-r.usage)}),e}exportRegexLibrary(){return JSON.stringify(this.settings.regexLibrary,null,2)}importRegexLibrary(e){try{let t=JSON.parse(e);if(!Array.isArray(t))throw new Error("导入的数据格式不正确");t.forEach(a=>{if(!a.id||!a.name||!a.pattern)throw new Error("导入的正则表达式缺少必要字段");w.validateRegex(a.pattern,a.flags||"g")});let r=new Set(this.settings.regexLibrary.map(a=>a.id)),s=t.filter(a=>!r.has(a.id));return this.settings.regexLibrary.push(...s),this.saveSettings(),new c.Notice(`成功导入 ${s.length} 个正则表达式`),!0}catch(t){return new c.Notice("导入失败："+t.message),!1}}filterFiles(e){let t=new Set(this.settings.fileExtensions),r=this.settings.excludePatterns,s=[];return r.length>0&&(s=r.map(a=>{try{return new RegExp(a,"i")}catch(i){return null}}).filter(a=>a!==null)),e.filter(a=>{if(!t.has(a.extension)||!this.settings.includeHiddenFiles&&a.name.charCodeAt(0)===46||a.stat&&a.stat.size>v.MAX_FILE_SIZE)return!1;if(s.length>0){let i=a.path;for(let n of s)if(n.test(i))return!1}return!0})}async checkFileSize(e){try{let t=await this.app.vault.adapter.stat(e.path);return t&&t.size<=v.MAX_FILE_SIZE}catch(t){return!0}}async searchInFile(e,t,r,s){let a=Date.now();try{if(!await this.checkFileSize(e))return{file:e,matches:[],totalMatches:0,searchTime:Date.now()-a,error:"文件过大，跳过搜索"};if(s!=null&&s.aborted)throw new Error("搜索已取消");let n=await this.app.vault.read(e),o=w.validateRegex(t,r),l=[];if(s!=null&&s.aborted)throw new Error("搜索已取消");return await this.performSearch(n,o,e,l,s),{file:e,matches:l,totalMatches:l.length,searchTime:Date.now()-a}}catch(i){return{file:e,matches:[],totalMatches:0,searchTime:Date.now()-a,error:i.message}}}async performSearch(e,t,r,s,a){let i=Math.min(this.settings.maxResultsPerFile,v.MAX_RESULTS_PER_FILE);if(!e||e.length<1)return;this.needsFullTextSearch(t)?await this.performOptimizedFullTextSearch(e,t,r,s,i,a):await this.performOptimizedLineSearch(e,t,r,s,i,a)}async performOptimizedLineSearch(e,t,r,s,a,i){let n=e.split(`
`),o=0;for(let l=0;l<n.length&&s.length<a;l++){if(i!=null&&i.aborted)throw new Error("搜索已取消");let g=n[l];if(g.length===0)continue;t.lastIndex=0;let f;for(;(f=t.exec(g))!==null&&s.length<a;){let p=this.getOptimizedContext(n,l);if(s.push({file:r,line:l+1,column:f.index+1,match:f[0],context:p,lineText:g,matchId:`${r.path}-${l+1}-${f.index+1}`}),!t.global)break}o++,o%200===0&&await new Promise(p=>setTimeout(p,0))}}async performOptimizedFullTextSearch(e,t,r,s,a,i){let n=e.split(`
`),o,l=0;for(t.lastIndex=0;(o=t.exec(e))!==null&&s.length<a;){if(i!=null&&i.aborted)throw new Error("搜索已取消");let g=e.substring(0,o.index),f=g.split(`
`).length,p=g.lastIndexOf(`
`)+1,u=o.index-p+1,d=this.getOptimizedContext(n,f-1),x=n[f-1]||"";if(s.push({file:r,line:f,column:u,match:o[0],context:d,lineText:x,matchId:`${r.path}-${f}-${u}`}),!t.flags.includes("g"))break;l++,l%50===0&&await new Promise(m=>setTimeout(m,0))}}getOptimizedContext(e,t){let r=Math.floor(v.MAX_CONTEXT_LINES/2),s=Math.max(0,t-r),a=Math.min(e.length-1,t+r);return e.slice(s,a+1).join(`
`)}needsFullTextSearch(e){let t=e.source;return e.flags.includes("m")||/\\[1-9]/.test(t)||t.includes("\\n")||t.includes("\\r")||t.includes("\\s")&&(t.includes(".*")||t.includes(".+"))||t.includes(".*")||t.includes(".+")}async searchInVaultWithLiveResults(e,t,r,s){this.currentSearchTask&&this.currentSearchTask.cancel(),this.currentSearchTask=new A;let a=this.currentSearchTask.signal;try{let i=this.app.vault.getFiles(),n=this.filterFiles(i);if(n.length===0)return;let o=this.currentSearchTask.start(),l=this.performVaultSearchWithLiveResults(n,e,t,r,s,a);await Promise.race([l,o]),this.currentSearchTask.complete(),this.settings.enableSearchHistory&&this.searchHistory.add(e)}catch(i){throw i instanceof L&&new c.Notice("搜索超时，请尝试更具体的搜索条件"),i}finally{this.currentSearchTask=null}}async performVaultSearchWithLiveResults(e,t,r,s,a,i){var f;let n=v.SEARCH_BATCH_SIZE,o=v.MAX_SEARCH_RESULTS,l=0,g=e.sort((p,u)=>{var m,S;let d=((m=p.stat)==null?void 0:m.size)||0,x=((S=u.stat)==null?void 0:S.size)||0;return d-x});for(let p=0;p<g.length;p+=n){if(i!=null&&i.aborted)throw new Error("搜索已取消");if(l>=o)break;let u=g.slice(p,p+n),d=u.map(m=>this.searchInFile(m,t,r,i)),x=await Promise.allSettled(d);for(let m of x)if(m.status==="fulfilled"){let S=m.value;if(S.matches.length>0&&(l+=S.matches.length,a&&a(S),l>=o))break}s&&s({current:p+u.length,total:g.length,currentFile:(f=u[u.length-1])==null?void 0:f.name,isComplete:p+u.length>=g.length||l>=o}),p%(n*2)===0&&await new Promise(m=>setTimeout(m,0))}}async searchInVault(e,t,r){this.currentSearchTask&&this.currentSearchTask.cancel(),this.currentSearchTask=new A;let s=this.currentSearchTask.signal;try{let a=this.app.vault.getFiles(),i=this.filterFiles(a),n=[];if(i.length===0)return n;let o=this.currentSearchTask.start(),l=this.performVaultSearch(i,e,t,n,r,s);return await Promise.race([l,o]),this.currentSearchTask.complete(),this.settings.enableSearchHistory&&this.searchHistory.add(e),n}catch(a){throw a instanceof L&&new c.Notice("搜索超时，请尝试更具体的搜索条件"),a}finally{this.currentSearchTask=null}}async performVaultSearch(e,t,r,s,a,i){var f;let n=v.SEARCH_BATCH_SIZE,o=v.MAX_SEARCH_RESULTS,l=0,g=e.sort((p,u)=>{var m,S;let d=((m=p.stat)==null?void 0:m.size)||0,x=((S=u.stat)==null?void 0:S.size)||0;return d-x});for(let p=0;p<g.length;p+=n){if(i!=null&&i.aborted)throw new Error("搜索已取消");if(l>=o)break;let u=g.slice(p,p+n),d=u.map(m=>this.searchInFile(m,t,r,i)),x=await Promise.allSettled(d);for(let m of x)if(m.status==="fulfilled"){let S=m.value;if(S.matches.length>0&&(s.push(S),l+=S.matches.length,l>=o))break}a&&a({current:p+u.length,total:g.length,currentFile:(f=u[u.length-1])==null?void 0:f.name,isComplete:p+u.length>=g.length||l>=o}),p%(n*2)===0&&await new Promise(m=>setTimeout(m,0))}}buildRegexFlags(){let e="";return this.settings.caseSensitive||(e+="i"),this.settings.multiline&&(e+="m"),e+="g",e}async replaceInFile(e,t,r,s,a){try{if(a!=null&&a.aborted)throw new Error("替换已取消");let i=await this.app.vault.read(e),n=w.validateRegex(t,s),o=i.match(n),l=o?o.length:0;if(l===0)return{file:e,replacedCount:0,originalContent:i,newContent:i};let g=i.replace(n,r);return g!==i&&await this.app.vault.modify(e,g),{file:e,replacedCount:l,originalContent:i,newContent:g}}catch(i){return{file:e,replacedCount:0,originalContent:"",newContent:"",error:i.message}}}async replaceInVault(e,t,r,s){let a=Date.now();this.currentSearchTask&&this.currentSearchTask.cancel(),this.currentSearchTask=new A;let i=this.currentSearchTask.signal;try{let n=this.app.vault.getFiles(),o=this.filterFiles(n),l=[],g=[],f=0,p=0;if(o.length===0)return{totalReplacements:0,filesModified:0,results:[],errors:[],processingTime:Date.now()-a};let u=this.currentSearchTask.start(),d=this.performVaultReplace(o,e,t,r,l,g,s,i);await Promise.race([d,u]),this.currentSearchTask.complete();for(let x of l)x.replacedCount>0&&(f+=x.replacedCount,p++);return{totalReplacements:f,filesModified:p,results:l,errors:g,processingTime:Date.now()-a}}catch(n){throw n instanceof L&&new c.Notice("替换超时，请尝试更具体的搜索条件"),n}finally{this.currentSearchTask=null}}async performVaultReplace(e,t,r,s,a,i,n,o){var g;let l=v.BATCH_SIZE;for(let f=0;f<e.length;f+=l){if(o!=null&&o.aborted)throw new Error("替换已取消");let p=e.slice(f,f+l);for(let u of p)try{let d=await this.replaceInFile(u,t,r,s,o);d.error?i.push(`${u.path}: ${d.error}`):a.push(d)}catch(d){i.push(`${u.path}: ${d.message}`)}n&&n({current:f+p.length,total:e.length,currentFile:(g=p[p.length-1])==null?void 0:g.name,isComplete:f+p.length>=e.length}),await new Promise(u=>setTimeout(u,0))}}cancelCurrentSearch(){this.currentSearchTask&&(this.currentSearchTask.cancel(),this.currentSearchTask=null)}getSearchHistory(){return this.searchHistory.get()}clearSearchHistory(){this.searchHistory.clear(),this.settings.searchHistory=[],this.saveSettings()}};E(D,"RegexSearchPlugin");var _=class extends c.Modal{constructor(e,t){super(e);this.currentResults=[];this.plugin=t}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("quick-search-modal");let t=e.createDiv("quick-search-container");t.createEl("h3",{text:"🔍 快速搜索"}),this.searchInput=t.createEl("input",{type:"text",placeholder:"输入搜索内容...",cls:"quick-search-input"}),this.resultsContainer=e.createDiv("quick-search-results");let r=(0,c.debounce)(this.performQuickSearch.bind(this),v.DEBOUNCE_DELAY);this.searchInput.addEventListener("input",r),this.searchInput.addEventListener("keydown",s=>{s.key==="Escape"?this.close():s.key==="Enter"&&this.openFullSearch()}),this.searchInput.focus()}async performQuickSearch(){let e=this.searchInput.value.trim();if(e.length<v.MIN_SEARCH_LENGTH){this.resultsContainer.empty();return}try{let t=w.escapeRegex(e),r=this.plugin.buildRegexFlags(),s=this.plugin.app.vault.getFiles().slice(0,10),a=[];for(let i of s){let n=await this.plugin.searchInFile(i,t,r);n.matches.length>0&&a.push(n)}this.displayQuickResults(a)}catch(t){}}displayQuickResults(e){if(this.resultsContainer.empty(),this.currentResults=e,e.length===0){this.resultsContainer.createEl("div",{text:"未找到匹配项",cls:"quick-search-no-results"});return}e.forEach(t=>{let r=this.resultsContainer.createDiv("quick-search-file");r.createEl("div",{text:t.file.name,cls:"quick-search-filename"}),t.matches.slice(0,3).forEach(s=>{let a=r.createDiv("quick-search-match");a.createEl("span",{text:`第${s.line}行: `,cls:"quick-search-line"}),a.createEl("span",{text:s.lineText,cls:"quick-search-text"}),a.addEventListener("click",()=>{this.jumpToMatch(s)})})})}async jumpToMatch(e){this.close(),await this.app.workspace.getLeaf().openFile(e.file),setTimeout(()=>{let r=this.app.workspace.getActiveViewOfType(c.MarkdownView);if(r&&r.editor){let s=r.editor,a=e.line-1,i=e.column-1;s.setCursor(a,i),s.scrollIntoView({from:{line:a,ch:0},to:{line:a,ch:s.getLine(a).length}},!0)}},100)}openFullSearch(){this.close(),new C(this.app,this.plugin).open()}onClose(){let{contentEl:e}=this;e.empty()}};E(_,"QuickSearchModal");var C=class extends c.Modal{constructor(e,t,r,s){super(e);this.searchResults=[];this.currentState="idle";this.plugin=t,this.currentFile=r||null,this.prefilledItem=s||null}canTransitionTo(e){let t=Object.values(Z).find(r=>r.to===e);return t?t.from.includes(this.currentState):!1}transitionToState(e,t){if(this.canTransitionTo(e)){let r=this.currentState;return this.currentState=e,this.onStateChanged(r,e,t),!0}return!1}onStateChanged(e,t,r){switch(this.logStateTransition(e,t,r),this.updateButtonStates(),t){case"idle":this.hideProgress();break;case"searching":this.showProgress("搜索中...");break;case"replacing":this.showProgress("替换中...");break;case"cancelled":this.hideProgress(),new c.Notice("操作已取消"),setTimeout(()=>this.transitionToState("idle"),1e3);break;case"error":this.hideProgress(),setTimeout(()=>this.transitionToState("idle"),2e3);break}}logStateTransition(e,t,r){this.plugin.settings.enableDebugLogging}getStateDisplayName(e){return{["idle"]:"空闲",["searching"]:"搜索中",["replacing"]:"替换中",["cancelled"]:"已取消",["error"]:"错误"}[e]||e}getCurrentStateInfo(){return{state:this.currentState,displayName:this.getStateDisplayName(this.currentState),canSearch:this.isIdle(),canReplace:this.isIdle()}}setPattern(e){this.patternInput&&(this.patternInput.value=e,this.patternInput.focus())}isIdle(){return this.currentState==="idle"}isSearching(){return this.currentState==="searching"}isReplacing(){return this.currentState==="replacing"}isOperating(){return this.isSearching()||this.isReplacing()}addPatternValidation(){let e=(0,c.debounce)(()=>{let t=w.sanitizeInput(this.patternInput.value);if(!t){this.patternInput.removeClass("regex-pattern-error"),this.patternInput.removeClass("regex-pattern-valid");return}try{let r="g",s=this.containerEl.querySelector(".regex-options-container input:nth-of-type(1)"),a=this.containerEl.querySelector(".regex-options-container input:nth-of-type(2)");s&&!s.checked&&(r+="i"),a&&a.checked&&(r+="m"),w.validateRegex(t,r),this.patternInput.removeClass("regex-pattern-error"),this.patternInput.addClass("regex-pattern-valid")}catch(r){this.patternInput.removeClass("regex-pattern-valid"),this.patternInput.addClass("regex-pattern-error")}},300);this.patternInput.addEventListener("input",e)}onOpen(){var m;let{contentEl:e}=this;e.empty(),this.modalEl.addClass("regex-search-modal");let t=e.createEl("h2",{text:this.currentFile?`🔍 在 ${this.currentFile.name} 中搜索`:"🎯 正则表达式搜索",cls:"regex-search-title"}),r=e.createDiv("regex-search-container"),s=r.createDiv("regex-pattern-container");s.createEl("label",{text:"⚡ 正则表达式："}),this.patternInput=s.createEl("input",{type:"text",placeholder:"输入正则表达式...",value:((m=this.prefilledItem)==null?void 0:m.pattern)||this.plugin.settings.defaultPattern,cls:"regex-pattern-input"}),this.patternInput.focus(),this.addPatternValidation();let a=r.createDiv("regex-quick-access");this.plugin.settings.enableSearchHistory&&this.createHistoryDropdown(a),this.plugin.settings.enableRegexLibrary&&this.createLibrarySelector(a);let i=r.createDiv("regex-replace-container");i.createEl("label",{text:"✨ 替换为："}),this.replaceInput=i.createEl("input",{type:"text",placeholder:"输入替换内容...",value:"",cls:"regex-replace-input"});let n=r.createDiv("regex-options-container"),o=this.createToggle(n,"🔤 区分大小写",this.plugin.settings.caseSensitive),l=this.createToggle(n,"📝 多行模式",this.plugin.settings.multiline);this.progressEl=r.createDiv("regex-progress");let g=r.createDiv("regex-button-container"),f=g.createEl("button",{text:"🔍 搜索",cls:"regex-search-button"}),p=g.createEl("button",{text:"🔄 替换",cls:"regex-replace-button"}),u=g.createEl("button",{text:"❌ 取消",cls:"regex-cancel-button"}),d=g.createEl("button",{text:"🧹 清空结果",cls:"regex-clear-button"}),x=e.createDiv("regex-results-container");this.bindEvents(f,p,u,d,x,o,l)}createHistoryDropdown(e){let t=e.createEl("button",{text:"📚 历史",cls:"regex-history-button"});t.addEventListener("click",()=>{this.showHistoryMenu(t)})}showHistoryMenu(e){let t=this.plugin.getSearchHistory();if(t.length===0){new c.Notice("没有搜索历史");return}let r=new c.Menu;t.forEach(a=>{r.addItem(i=>{i.setTitle(a),i.onClick(()=>{this.patternInput.value=a,this.patternInput.focus()})})}),r.addSeparator(),r.addItem(a=>{a.setTitle("清空历史"),a.onClick(()=>{this.plugin.clearSearchHistory(),new c.Notice("搜索历史已清空")})});let s=e.getBoundingClientRect();r.showAtPosition({x:s.left,y:s.bottom})}createLibrarySelector(e){e.createEl("button",{text:"📚 正则库",cls:"regex-library-button"}).addEventListener("click",()=>{new M(this.app,this.plugin,this).open()})}createToggle(e,t,r){let s=e.createDiv("regex-toggle-container"),a=s.createEl("input",{type:"checkbox"});return a.checked=r,s.createEl("label",{text:t}),a}bindEvents(e,t,r,s,a,i,n){let o=E(async()=>{if(!this.isIdle())return;let u=w.sanitizeInput(this.patternInput.value);if(!u){new c.Notice("请输入正则表达式");return}try{let d="";i.checked||(d+="i"),n.checked&&(d+="m"),d+="g",w.validateRegex(u,d),this.transitionToState("searching"),a.empty(),a.classList.add("has-content"),this.containerEl.classList.add("has-results");let x=a.createEl("div",{cls:"regex-live-stats"}),m=a.createEl("div",{cls:"regex-live-results"}),S=0,T=0,R=[];if(this.currentFile){x.textContent="搜索中...";let y=await this.plugin.searchInFile(this.currentFile,u,d);y.matches.length>0&&(R.push(y),S=y.totalMatches,this.renderSingleResult(y,m)),x.textContent=S>0?`找到 ${S} 个匹配项`:"未找到匹配项"}else x.textContent="正在搜索...",await this.plugin.searchInVaultWithLiveResults(u,d,y=>{this.updateProgress(`搜索中... (${y.current}/${y.total})`),x.textContent=`已搜索 ${y.current}/${y.total} 个文件，找到 ${S} 个匹配项`},y=>{y.matches.length>0&&(R.push(y),S+=y.totalMatches,T++,this.renderSingleResult(y,m),x.textContent=`找到 ${S} 个匹配项，分布在 ${T} 个文件中`)});R.length===0&&m.createEl("div",{text:"未找到匹配项",cls:"regex-no-results"}),this.searchResults=R,this.transitionToState("idle")}catch(d){d instanceof I?new c.Notice(d.message):this.isOperating()?(new c.Notice("搜索出错："+d.message),this.transitionToState("error")):new c.Notice("搜索出错："+d.message)}},"performSearch"),l=E(async()=>{if(!this.isIdle())return;let u=w.sanitizeInput(this.patternInput.value),d=this.replaceInput.value;if(!u){new c.Notice("请输入正则表达式");return}try{let x="";if(i.checked||(x+="i"),n.checked&&(x+="m"),x+="g",w.validateRegex(u,x),this.plugin.settings.confirmReplace&&!this.currentFile&&!await this.confirmReplace(u,d))return;this.transitionToState("replacing"),a.empty();let m=0,S=0;if(this.currentFile){let T=await this.plugin.replaceInFile(this.currentFile,u,d,x);m=T.replacedCount,S=T.replacedCount>0?1:0}else{let T=await this.plugin.replaceInVault(u,d,x,R=>{this.updateProgress(`替换中... (${R.current}/${R.total})`)});m=T.totalReplacements,S=T.filesModified}this.displayReplaceResults(m,S,a),this.transitionToState("idle")}catch(x){x instanceof I?new c.Notice(x.message):this.isOperating()?(new c.Notice("替换出错："+x.message),this.transitionToState("error")):new c.Notice("替换出错："+x.message)}},"performReplace"),g=E(()=>{this.plugin.cancelCurrentSearch(),this.transitionToState("cancelled")},"cancelSearch"),f=E(()=>{a.empty(),a.classList.remove("has-content"),this.containerEl.classList.remove("has-results"),this.searchResults=[]},"clearResults");e.addEventListener("click",o),t.addEventListener("click",l),r.addEventListener("click",g),s.addEventListener("click",f);let p=E(u=>{u.key==="Enter"?u.ctrlKey||u.metaKey?(u.preventDefault(),l()):(u.preventDefault(),o()):u.key==="Escape"&&(this.isOperating()?g():this.close())},"handleKeydown");this.patternInput.addEventListener("keydown",p),this.replaceInput.addEventListener("keydown",p)}updateButtonStates(){let e=this.containerEl.querySelector(".regex-search-button"),t=this.containerEl.querySelector(".regex-replace-button"),r=this.containerEl.querySelector(".regex-cancel-button"),s=this.isOperating();e&&(e.disabled=s),t&&(t.disabled=s),r&&r.toggleClass("regex-button-visible",s)}showProgress(e){this.progressEl.textContent=e,this.progressEl.addClass("regex-progress-visible")}updateProgress(e){this.progressEl.textContent=e}hideProgress(){this.progressEl.removeClass("regex-progress-visible")}async confirmReplace(e,t){return new Promise(r=>{new k(this.app,{title:"确认替换",message:`确定要在整个库中执行替换操作吗？

模式：${e}
替换为：${t}`,confirmText:"确定",cancelText:"取消"},r).open()})}displayReplaceResults(e,t,r){if(r.empty(),r.classList.add("has-content"),this.containerEl.classList.add("has-results"),e>0){let s=r.createEl("div",{cls:"regex-replace-success"});s.createEl("div",{text:"✅ 替换完成！"}),s.createEl("div",{text:`共替换 ${e} 处，涉及 ${t} 个文件`})}else r.createEl("div",{text:"未找到匹配的内容",cls:"regex-no-results"})}displayResults(e,t){if(t.empty(),this.searchResults=e,e.length===0){t.createEl("div",{text:"未找到匹配项",cls:"regex-no-results"}),t.classList.add("has-content"),this.containerEl.classList.add("has-results");return}t.classList.add("has-content"),this.containerEl.classList.add("has-results");let r=e.reduce((a,i)=>a+i.totalMatches,0);t.createEl("div",{cls:"regex-stats"}).createEl("span",{text:`找到 ${r} 个匹配项，分布在 ${e.length} 个文件中`}),e.forEach(a=>{this.renderSingleResult(a,t)})}renderSingleResult(e,t){if(e.error){let i=t.createEl("div",{cls:"regex-error"});i.createEl("strong",{text:e.file.name}),i.createEl("span",{text:` - 错误：${e.error}`});return}let r=t.createDiv("regex-file-result"),s=r.createEl("div",{cls:"regex-file-title"});s.createEl("strong",{text:e.file.name}),s.createEl("span",{text:` (${e.totalMatches} 个匹配项)`});let a=r.createDiv("regex-matches-container");e.matches.forEach(i=>{let n=a.createDiv("regex-match");n.setAttribute("data-match-id",i.matchId),n.createEl("div",{cls:"regex-match-location"}).createEl("span",{text:`第 ${i.line} 行，第 ${i.column} 列`});let l=n.createEl("div",{cls:"regex-match-content"});this.renderMatchContent(l,i),n.addEventListener("click",()=>{this.jumpToMatch(i)})})}renderMatchContent(e,t){t.context.split(`
`).forEach((s,a)=>{let i=e.createEl("div",{cls:"regex-context-line"});if(s===t.lineText){i.addClass("regex-match-line");let o=s.substring(0,t.column-1),l=t.match,g=s.substring(t.column-1+l.length);i.createEl("span",{text:o}),i.createEl("span",{text:l,cls:"regex-highlight"}),i.createEl("span",{text:g})}else i.createEl("span",{text:s})})}async jumpToMatch(e){try{let t=this.containerEl.querySelector(`[data-match-id="${e.matchId}"]`);t&&t.addClass("loading"),this.close(),await this.app.workspace.getLeaf().openFile(e.file),setTimeout(()=>{let s=this.app.workspace.getActiveViewOfType(c.MarkdownView);s&&s.editor&&this.highlightMatch(s.editor,e)},100)}catch(t){new c.Notice("跳转失败："+t.message)}}highlightMatch(e,t){try{let r=t.line-1,s=t.column-1,a=t.match.length;e.setCursor(r,s),e.scrollIntoView({from:{line:r,ch:0},to:{line:r,ch:e.getLine(r).length}},!0),e.setSelection({line:r,ch:s},{line:r,ch:s+a}),setTimeout(()=>{try{e.setCursor(r,s)}catch(i){}},v.HIGHLIGHT_DURATION)}catch(r){}}onClose(){this.isOperating()&&this.plugin.cancelCurrentSearch();let{contentEl:e}=this;e.empty()}};E(C,"RegexSearchModal");var M=class extends c.Modal{constructor(e,t,r){super(e);this.plugin=t,this.parentModal=r||null}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("regex-library-modal"),e.createEl("h2",{text:"📚 正则表达式库",cls:"regex-library-title"}),this.libraryContainerEl=e.createDiv("regex-library-container");let t=e.createDiv("regex-library-buttons"),r=t.createEl("button",{text:"➕ 添加新表达式",cls:"regex-library-add-btn"}),s=t.createEl("button",{text:"📥 导入",cls:"regex-library-import-btn"}),a=t.createEl("button",{text:"📤 导出",cls:"regex-library-export-btn"});r.addEventListener("click",()=>this.showAddForm()),s.addEventListener("click",()=>this.showImportDialog()),a.addEventListener("click",()=>this.exportLibrary()),this.renderLibrary()}renderLibrary(){if(this.libraryContainerEl.empty(),!this.plugin.settings.enableRegexLibrary){this.libraryContainerEl.createEl("div",{text:"正则表达式库已禁用，请在设置中启用。",cls:"regex-library-disabled"});return}let e=this.plugin.getRegexLibraryByCategory(),t=Object.keys(e);if(t.length===0){this.libraryContainerEl.createEl("div",{text:'暂无保存的正则表达式，点击"添加新表达式"开始创建。',cls:"regex-library-empty"});return}t.forEach(r=>{let s=this.libraryContainerEl.createDiv("regex-library-category"),a=s.createDiv("regex-library-category-header");a.createEl("h3",{text:r}),a.createEl("span",{text:`${e[r].length}`,cls:"regex-library-category-count"});let i=s.createDiv("regex-library-category-content");e[r].forEach(n=>{this.renderLibraryItem(i,n)})})}renderLibraryItem(e,t){let r=e.createDiv("regex-library-item"),s=r.createDiv("regex-library-item-info");s.createEl("div",{cls:"regex-library-item-name"}).createEl("strong",{text:t.name}),s.createEl("div",{text:t.description,cls:"regex-library-item-description"}),s.createEl("div",{cls:"regex-library-item-pattern"}).createEl("code",{text:`/${t.pattern}/${t.flags}`});let n=r.createDiv("regex-library-item-actions"),o=n.createEl("button",{text:"使用",cls:"regex-library-use-btn"}),l=n.createEl("button",{text:"编辑",cls:"regex-library-edit-btn"}),g=n.createEl("button",{text:"删除",cls:"regex-library-delete-btn"});o.addEventListener("click",()=>{this.plugin.incrementRegexUsage(t.id),this.parentModal?(this.parentModal.setPattern(t.pattern),this.close()):(this.close(),new C(this.app,this.plugin,null,t).open())}),l.addEventListener("click",()=>this.showEditForm(t)),g.addEventListener("click",()=>this.confirmDelete(t))}showAddForm(){new P(this.app,this.plugin,null,e=>{e&&this.renderLibrary()}).open()}showEditForm(e){new P(this.app,this.plugin,e,t=>{t&&this.renderLibrary()}).open()}confirmDelete(e){new k(this.app,{title:"确认删除",message:`确定要删除正则表达式"${e.name}"吗？此操作不可撤销。`,confirmText:"删除",cancelText:"取消"},t=>{t&&(this.plugin.removeFromRegexLibrary(e.id),this.renderLibrary(),new c.Notice("已删除正则表达式"))}).open()}showImportDialog(){new B(this.app,this.plugin,()=>{this.renderLibrary()}).open()}exportLibrary(){let e=this.plugin.exportRegexLibrary();navigator.clipboard.writeText(e).then(()=>{new c.Notice("正则表达式库已复制到剪贴板")}).catch(()=>{let t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),new c.Notice("正则表达式库已复制到剪贴板")})}onClose(){let{contentEl:e}=this;e.empty(),this.parentModal&&setTimeout(()=>{this.parentModal.open()},100)}};E(M,"RegexLibraryModal");var P=class extends c.Modal{constructor(e,t,r,s){super(e);this.plugin=t,this.item=r,this.callback=s}onOpen(){var S,T,R,y,O;let{contentEl:e}=this;e.empty(),e.addClass("regex-library-item-modal");let t=this.item?"编辑正则表达式":"添加正则表达式";e.createEl("h3",{text:t});let r=e.createEl("form"),s=r.createDiv("form-group");s.createEl("label",{text:"名称："});let a=s.createEl("input",{type:"text",value:((S=this.item)==null?void 0:S.name)||"",placeholder:"输入表达式名称...",cls:"regex-form-input"}),i=r.createDiv("form-group");i.createEl("label",{text:"正则表达式："});let n=i.createEl("input",{type:"text",value:((T=this.item)==null?void 0:T.pattern)||"",placeholder:"输入正则表达式...",cls:"regex-form-input regex-pattern-input"}),o=r.createDiv("form-group");o.createEl("label",{text:"标志："});let l=o.createEl("input",{type:"text",value:((R=this.item)==null?void 0:R.flags)||"g",placeholder:"g, i, m, s...",cls:"regex-form-input"}),g=r.createDiv("form-group");g.createEl("label",{text:"描述："});let f=g.createEl("textarea",{value:((y=this.item)==null?void 0:y.description)||"",placeholder:"描述这个正则表达式的用途...",cls:"regex-form-textarea"}),p=r.createDiv("form-group");p.createEl("label",{text:"分类："});let u=p.createEl("input",{type:"text",value:((O=this.item)==null?void 0:O.category)||"自定义",placeholder:"输入分类名称...",cls:"regex-form-input"}),d=r.createDiv("form-buttons"),x=d.createEl("button",{text:"保存",type:"submit",cls:"regex-form-save-btn"}),m=d.createEl("button",{text:"取消",type:"button",cls:"regex-form-cancel-btn"});r.addEventListener("submit",z=>{z.preventDefault(),this.saveItem(a.value,n.value,l.value,f.value,u.value)}),m.addEventListener("click",()=>{this.callback(!1),this.close()}),setTimeout(()=>a.focus(),100)}saveItem(e,t,r,s,a){if(!e.trim()||!t.trim()){new c.Notice("名称和正则表达式不能为空");return}let i=!1;this.item?i=this.plugin.updateRegexLibraryItem(this.item.id,{name:e.trim(),pattern:t.trim(),flags:r.trim()||"g",description:s.trim(),category:a.trim()||"自定义"}):i=this.plugin.addToRegexLibrary(e.trim(),t.trim(),s.trim(),a.trim()||"自定义",r.trim()||"g"),i&&(new c.Notice(this.item?"正则表达式已更新":"正则表达式已添加"),this.callback(!0),this.close())}onClose(){let{contentEl:e}=this;e.empty()}};E(P,"RegexLibraryItemModal");var B=class extends c.Modal{constructor(e,t,r){super(e);this.plugin=t,this.callback=r}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("regex-library-import-modal"),e.createEl("h3",{text:"导入正则表达式库"});let t=e.createEl("form"),r=t.createDiv("form-group");r.createEl("label",{text:"粘贴JSON数据："});let s=r.createEl("textarea",{placeholder:"在这里粘贴正则表达式库的JSON数据...",cls:"regex-import-textarea"}),a=t.createDiv("form-buttons"),i=a.createEl("button",{text:"导入",type:"submit",cls:"regex-form-save-btn"}),n=a.createEl("button",{text:"取消",type:"button",cls:"regex-form-cancel-btn"});t.addEventListener("submit",o=>{o.preventDefault(),this.plugin.importRegexLibrary(s.value)&&(this.callback(),this.close())}),n.addEventListener("click",()=>this.close()),setTimeout(()=>s.focus(),100)}onClose(){let{contentEl:e}=this;e.empty()}};E(B,"RegexLibraryImportModal");var k=class extends c.Modal{constructor(e,t,r){super(e);this.options=t,this.callback=r}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("confirm-modal"),e.createEl("h3",{text:this.options.title}),e.createEl("div",{cls:"confirm-message"}).createEl("p",{text:this.options.message});let r=e.createDiv("confirm-buttons"),s=r.createEl("button",{text:this.options.confirmText,cls:"confirm-button-confirm"}),a=r.createEl("button",{text:this.options.cancelText,cls:"confirm-button-cancel"});s.addEventListener("click",()=>{this.callback(!0),this.close()}),a.addEventListener("click",()=>{this.callback(!1),this.close()}),this.scope.register([],"Enter",()=>{this.callback(!0),this.close()}),this.scope.register([],"Escape",()=>{this.callback(!1),this.close()}),a.focus()}onClose(){let{contentEl:e}=this;e.empty()}};E(k,"ConfirmModal");var N=class extends c.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),e.createEl("h2",{text:"🎯 正则表达式搜索设置"}),this.createBasicSettings(e),this.createAdvancedSettings(e),this.createPerformanceSettings(e),this.createUserExperienceSettings(e)}createBasicSettings(e){let t=e.createEl("h3",{text:"⚙️ 基本设置"});new c.Setting(e).setName("默认搜索模式").setDesc("打开搜索时的默认正则表达式模式").addText(l=>l.setPlaceholder("输入默认正则表达式...").setValue(this.plugin.settings.defaultPattern).onChange(async g=>{this.plugin.settings.defaultPattern=w.sanitizeInput(g),await this.plugin.saveSettings()})),new c.Setting(e).setName("区分大小写").setDesc("默认启用区分大小写搜索").addToggle(l=>l.setValue(this.plugin.settings.caseSensitive).onChange(async g=>{this.plugin.settings.caseSensitive=g,await this.plugin.saveSettings()}));let r=new c.Setting(e).setName("多行模式").setDesc("默认启用多行模式（^ 和 $ 匹配行首行尾）").addToggle(l=>l.setValue(this.plugin.settings.multiline).onChange(async g=>{this.plugin.settings.multiline=g,await this.plugin.saveSettings()})),s=e.createEl("div",{cls:"setting-item-description regex-multiline-help"}),a=s.createEl("span",{cls:"help-title",text:"💡 多行模式说明："}),i=s.createEl("div",{cls:"help-item"});i.createEl("span",{text:"• "}),i.createEl("strong",{text:"单行模式"}),i.createEl("span",{text:"："}),i.createEl("span",{cls:"help-code",text:"^"}),i.createEl("span",{text:" 和 "}),i.createEl("span",{cls:"help-code",text:"$"}),i.createEl("span",{text:" 匹配整个文本的开始和结束"});let n=s.createEl("div",{cls:"help-item"});n.createEl("span",{text:"• "}),n.createEl("strong",{text:"多行模式"}),n.createEl("span",{text:"："}),n.createEl("span",{cls:"help-code",text:"^"}),n.createEl("span",{text:" 和 "}),n.createEl("span",{cls:"help-code",text:"$"}),n.createEl("span",{text:" 匹配每一行的开始和结束"});let o=s.createEl("div",{cls:"help-example"});o.createEl("span",{text:"例如：在多行模式下，"}),o.createEl("span",{cls:"help-code",text:"^第"}),o.createEl("span",{text:' 可以匹配每一行开头的"第"字'}),new c.Setting(e).setName("文件扩展名").setDesc("要搜索的文件扩展名（用逗号分隔）").addText(l=>l.setPlaceholder("md,txt,json,js,ts").setValue(this.plugin.settings.fileExtensions.join(",")).onChange(async g=>{let f=g.split(",").map(p=>p.trim()).filter(p=>p.length>0);this.plugin.settings.fileExtensions=f,await this.plugin.saveSettings()}))}createAdvancedSettings(e){let t=e.createEl("h3",{text:"🔧 高级设置"});new c.Setting(e).setName("包含隐藏文件").setDesc("在搜索中包含隐藏文件（以 . 开头的文件）").addToggle(r=>r.setValue(this.plugin.settings.includeHiddenFiles).onChange(async s=>{this.plugin.settings.includeHiddenFiles=s,await this.plugin.saveSettings()})),new c.Setting(e).setName("排除模式").setDesc("要排除的文件路径模式（用逗号分隔，支持正则表达式）").addText(r=>r.setPlaceholder("node_modules,\\.git,temp").setValue(this.plugin.settings.excludePatterns.join(",")).onChange(async s=>{let a=s.split(",").map(i=>i.trim()).filter(i=>i.length>0);this.plugin.settings.excludePatterns=a,await this.plugin.saveSettings()})),new c.Setting(e).setName("确认替换").setDesc("在执行全库替换操作前显示确认对话框").addToggle(r=>r.setValue(this.plugin.settings.confirmReplace).onChange(async s=>{this.plugin.settings.confirmReplace=s,await this.plugin.saveSettings()}))}createPerformanceSettings(e){let t=e.createEl("h3",{text:"⚡ 性能设置"});new c.Setting(e).setName("每个文件最大结果数").setDesc("限制每个文件显示的最大搜索结果数量").addText(r=>r.setPlaceholder("50").setValue(this.plugin.settings.maxResultsPerFile.toString()).onChange(async s=>{let a=parseInt(s);!isNaN(a)&&a>0&&a<=v.MAX_RESULTS_PER_FILE&&(this.plugin.settings.maxResultsPerFile=a,await this.plugin.saveSettings())}))}createUserExperienceSettings(e){let t=e.createEl("h3",{text:"🎨 用户体验设置"});new c.Setting(e).setName("启用搜索历史").setDesc("保存和显示搜索历史记录").addToggle(r=>r.setValue(this.plugin.settings.enableSearchHistory).onChange(async s=>{this.plugin.settings.enableSearchHistory=s,await this.plugin.saveSettings()})),new c.Setting(e).setName("启用正则表达式库").setDesc("启用内置的正则表达式库功能，可以保存和重复使用常用正则表达式").addToggle(r=>r.setValue(this.plugin.settings.enableRegexLibrary).onChange(async s=>{this.plugin.settings.enableRegexLibrary=s,await this.plugin.saveSettings()})),new c.Setting(e).setName("启用进度指示器").setDesc("在搜索和替换过程中显示进度指示器").addToggle(r=>r.setValue(this.plugin.settings.enableProgressIndicator).onChange(async s=>{this.plugin.settings.enableProgressIndicator=s,await this.plugin.saveSettings()})),new c.Setting(e).setName("调试模式").setDesc("启用后会在开发者控制台显示状态转换日志").addToggle(r=>r.setValue(this.plugin.settings.enableDebugLogging).onChange(async s=>{this.plugin.settings.enableDebugLogging=s,await this.plugin.saveSettings()})),new c.Setting(e).setName("清空搜索历史").setDesc("删除所有保存的搜索历史记录").addButton(r=>r.setButtonText("🗑️ 清空历史").setWarning().onClick(async()=>{this.plugin.clearSearchHistory(),new c.Notice("搜索历史已清空")}))}};E(N,"RegexSearchSettingTab");
